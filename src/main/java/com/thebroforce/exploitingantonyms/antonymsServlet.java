/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thebroforce.exploitingantonyms;

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.ArrayList;
import java.util.Arrays;

/**
 *
 * @author redho
 */
@WebServlet(name = "antonymsServlet", urlPatterns = {"/antonymsServlet"})
public class antonymsServlet extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        String query = request.getParameter("query");
        
        String[] queryArr = query.split(" ");
        ArrayList<ArrayList<String>> exploitedQuery = new ArrayList<>();
       
        for (String queryArr1 : queryArr) {
            ArrayList<String> explTermList = new ArrayList<>();
            explTermList.add(queryArr1);
            String[] antonyms = Antonyms.getAntonyms(queryArr1, getServletContext().getRealPath("/WEB-INF/WordNet-3.0/dict/"));
            if(antonyms != null) {
                explTermList.addAll(Arrays.asList(antonyms));
            }
            exploitedQuery.add(explTermList);
        }
        
        try (PrintWriter out = response.getWriter()) {
            out.println("{");
            out.print("\"exploited\" : [");
            for (ArrayList<String> explTermList : exploitedQuery) {
                out.print("[");
                for(String term : explTermList) {
                    out.print("\"" + term + "\",");
                }
                out.print("],");
            }
            out.println("]");
            out.println("}");
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
