/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thebroforce.exploitingantonyms;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.json.simple.JSONArray;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import static java.lang.Math.toIntExact;

/**
 *
 * params:
 * arr1: int[]
 * arr2: int[]
 * 
 * arr1.length == arr2.length
 * 
 * values in arr1 and arr2 are between (0, length - 1) non-repeating within the same array
 * 
 * @author redho
 */
@WebServlet(name = "getKendallTauServlet", urlPatterns = {"/getKendallTauServlet"})
public class getKendallTauServlet extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     * @throws org.json.simple.parser.ParseException
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException, ParseException {
        
        JSONArray arr1JSON = (JSONArray) new JSONParser().parse(request.getParameter("arr1"));
        JSONArray arr2JSON = (JSONArray) new JSONParser().parse(request.getParameter("arr2"));
        
        int arrSize = arr1JSON.size();
        int []arr1 = new int[arrSize];
        int []arr2 = new int[arrSize];
        
        for (int i = 0; i < arrSize; i++) {
            arr1[i] = toIntExact((long)(arr1JSON.get(i)));
            arr2[i] = toIntExact((long)(arr2JSON.get(i)));
        }
        
        long distance = KendallTau.distance(arr1, arr2);
        
        double normalized_distance = 
            (double)distance / (double)(arr1.length * (arr1.length - 1));
        
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            out.println(normalized_distance);
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            processRequest(request, response);
        } catch (ParseException ex) {
            Logger.getLogger(getKendallTauServlet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            processRequest(request, response);
        } catch (ParseException ex) {
            Logger.getLogger(getKendallTauServlet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
